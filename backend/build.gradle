plugins {
	id 'org.springframework.boot' version '3.5.4'
	id 'io.spring.dependency-management' version '1.1.6'
	id 'java'
}

group = 'app'
version = '0.0.1-SNAPSHOT'
java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'me.paulschwarz:spring-dotenv:4.0.0'

	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	// ▶ 버전 명시 제거(부트가 맞춰줌)
	implementation 'org.hibernate.orm:hibernate-spatial'
	// JTS는 보통 spatial이 끌고 오므로 일단 제거
	// 필요하면 나중에만 추가: implementation 'org.locationtech.jts:jts-core'

	implementation 'org.flywaydb:flyway-core'
	implementation 'org.flywaydb:flyway-database-postgresql'
	runtimeOnly 'org.postgresql:postgresql'

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

// (선택) 혹시 하이버네이트 하위 모듈 버전이 어긋나면 한 버전으로 강제
/*configurations.all {
	resolutionStrategy.eachDependency { details ->
		if (details.requested.group == 'org.hibernate.orm'
				&& details.requested.name.startsWith('hibernate-')) {
			details.useVersion '6.6.1.Final'
		}
	}
}*/

tasks.withType(Test).configureEach {
	useJUnitPlatform()
}
